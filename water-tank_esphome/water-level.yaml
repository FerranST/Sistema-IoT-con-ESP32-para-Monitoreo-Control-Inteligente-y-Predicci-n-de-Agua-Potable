esphome:
  name: water-tank

deep_sleep:
  run_duration: 30s
  sleep_duration: 2min
  id: deep_sleep_1

binary_sensor:
  - platform: homeassistant
    entity_id: input_boolean.prevent_deep_sleep
    id: prevent_deep_sleep
    publish_initial_state: true
    on_state:
      then:
        if:
          condition:
            lambda: return x;
          then:
            - logger.log: "Preventing deep sleep"
            - deep_sleep.prevent: deep_sleep_1
          else:
            - logger.log: "Allowing deep sleep"
            - deep_sleep.allow: deep_sleep_1

external_components:
  - source: my_components

    components: [ jsn_sr04t ]

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

web_server:
  port: 80

# Enable Home Assistant API
api:
  password: "vRpo4zJgiPmvMgddENgivViokeZj"

ota:
  - platform: esphome
    password: "vRpo4zJgiPmvMgddENgivViokeZj"

wifi:
  ssid: "FAM_SAN_TRE"
  password: "XKV6hizv8nqUamfXxB6jJ9vW8yzmyR"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Water-Tank Fallback Hotspot"
    password: "9hFSgRswKpda"

captive_portal:
    
uart:
  tx_pin: GPIO0
  rx_pin: GPIO1
  baud_rate: 9600


sensor:
  - platform: template
    name: Level
    id: level
    icon: 'mdi:water'
    unit_of_measurement: '%'
    accuracy_decimals: 0

  - platform: wifi_signal
    name: "WiFi Signal"
    id: dev_wifi_signal
    update_interval: 5s

  - platform: copy # wifi signal in %
    source_id: dev_wifi_signal
    name: WiFi
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""

  # Add 47K Resistor to mode
  - platform: jsn_sr04t
    name: distance
    update_interval: 3s

    filters:
      - median:
          window_size: 8
          send_every: 4
          send_first_at: 3
      - clamp:
          min_value: 0.20
          max_value: 1.15
      - exponential_moving_average:
          alpha: 0.1
          send_every: 8
    
    on_value:
      then:
        - sensor.template.publish:
            id: level
            state: !lambda 'return -192.31 * x + 138.46;'

  - platform: ntc
    sensor: resistance_sensor
    name: "Battery Temperature"
    calibration:
      b_constant: 3950       # Common for many 100k NTCs (check your datasheet)
      reference_resistance: 100000  # 100kΩ at 25°C
      reference_temperature: 25°C

  - platform: resistance
    id: resistance_sensor
    sensor: adc_sensor
    configuration: UPSTREAM   # NTC is connected to VCC side
    resistor: 100000          # Fixed resistor value (100kΩ)

  - platform: adc
    id: adc_sensor
    pin: GPIO4
    attenuation: 11db         # For reading up to 3.3V
    update_interval: 1s